name: Release

on:
  pull_request: {}
  push:
    branches:
      - main

jobs:
  version-check:
    name: Verify version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          ref: main
          path: branch-main

      - name: Verify version
        if: github.ref != 'refs/heads/main'
        run: |
          MAIN=$(cat branch-main/version | cut -d. -f1-2)
          VERSION=$(cat version)

          set +e
          sh lane.d/shell-github-action-semver-compare/run.sh -m "$MAIN.0" -c "$VERSION.0"
          exitcode=$?
          echo "exitcode=$exitcode"
          if [ $exitcode -ne 0 ] && [ $exitcode -eq 10 ]; then
            exit 1
          fi

      - name: Find minor version
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "major=$(cat version | sed 's|[^0-9\.]||g')" >> $GITHUB_ENV
          echo "minor=$(gh api repos/${{ github.repository }}/commits?sha=main --paginate | jq length | tr -d \\n)" >> $GITHUB_ENV

      - name: Output version
        id: version
        run: |
          VERSION=${{ env.major }}.${{ env.minor }}
          printf 'Current version: %s\n' "$VERSION"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

  create-artifacts:
    name: Create Artifacts
    needs: version-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Bundle source files
        run: |
          mkdir bundle
          cp -r lane.d bundle/
          cp LICENSE bundle/LICENSE.txt

      - name: Bundle version-injected-lane
        run: |
          VERSION='${{ needs.version-check.outputs.version }}'
          printf '#!/bin/sh\nVERSION=''%s''\n' "$VERSION" > bundle/lane
          tail +2 lane >> bundle/lane
          chmod +x bundle/lane

      - name: Verify version-injected-lane
        run: |
          sh bundle/lane -v | grep -iv unreleased
          [ $? -eq 0 ] || exit 1

      - name: Package files
        run: |
          VERSION=$(cat version)
          cd bundle
          tar -cJf "../lane-${VERSION}.tar.xz" *

      - name: Calculate checksums
        run: |
          for file in ./lane-*.tar.xz; do
            [ -f "$file" ] || continue
            sha512sum "$file" > "$file.sha512sum"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: lane-*.tar.*

  create-release:
    name: Create Release
    needs: [version-check, create-artifacts]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: release-artifacts
          path: artifacts

      - name: Display structure of files
        run: ls -Rl

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ needs.version-check.outputs.version }}"
          files: artifacts/*
