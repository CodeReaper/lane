name: Release

on:
  pull_request: {}
  release:
    types:
      - published

jobs:
  version:
    name: Verify version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ env.version }}
    steps:
      - name: Output real version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Output faked version
        if: github.event_name == 'pull_request'
        run: echo "version=0.0.0" >> $GITHUB_ENV

  create-artifacts:
    name: Create Artifacts
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Bundle source files
        run: |
          mkdir bundle
          cp -r lane.d bundle/
          cp LICENSE bundle/LICENSE.txt

      - name: Bundle version-injected-lane
        run: |
          VERSION='${{ needs.version.outputs.version }}'
          printf '#!/bin/sh\nVERSION=''%s''\n' "$VERSION" > bundle/lane
          tail +2 lane >> bundle/lane
          chmod +x bundle/lane

      - name: Verify version-injected-lane
        run: |
          sh bundle/lane -v | grep -iv unreleased
          [ $? -eq 0 ] || exit 1

      - name: Package files
        run: |
          cd bundle
          tar -cJf "../lane-${{ needs.version.outputs.version }}.tar.xz" *

      - name: Calculate checksums
        run: |
          for file in ./lane-*.tar.xz; do
            [ -f "$file" ] || continue
            sha512sum "$file" > "$file.sha512sum"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: lane-*.tar.*

  create-release:
    name: Create Release
    needs: [version, create-artifacts]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: artifacts

      - name: Display structure of files
        run: ls -Rl

      - name: Attach files
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ needs.version.outputs.version }}"
          files: artifacts/*
