name: Unit tests

on:
  workflow_call: {}

jobs:
  lane:
    name: Test Lane
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Test missing argument
        run: |
          rm -rf lanes
          mkdir lanes

          set +e
          sh ./lane 2> result
          [ $? -eq 1 ] || exit 1
          echo 'The available lanes are:' > expected
          diff -q expected result || { echo "Unexpected difference:"; diff expected result; exit 1; }

      - name: Test help argument
        run: |
          rm -rf lanes
          mkdir lanes

          set +e
          sh ./lane -h > 1
          [ $? -eq 0 ] || exit 1

          sh ./lane --help > 2
          [ $? -eq 0 ] || exit 1

          sh ./lane help > 3
          [ $? -eq 0 ] || exit 1

          diff -q 1 2 || { echo "Unexpected difference:"; diff 1 2; exit 1; }
          diff -q 2 3 || { echo "Unexpected difference:"; diff 2 3; exit 1; }

      - name: Test version argument
        run: |
          rm -rf lanes

          set +e
          sh ./lane -v > 1
          [ $? -eq 0 ] || exit 1

          sh ./lane --version > 2
          [ $? -eq 0 ] || exit 1

          sh ./lane version > 3
          [ $? -eq 0 ] || exit 1

          diff -q 1 2 || { echo "Unexpected difference:"; diff 1 2; exit 1; }
          diff -q 2 3 || { echo "Unexpected difference:"; diff 2 3; exit 1; }

      - name: Test completion argument
        run: |
          rm -rf lanes

          set +e
          sh ./lane completion bash > /dev/null
          [ $? -eq 0 ] || exit 1

          sh ./lane completion zsh > /dev/null
          [ $? -eq 0 ] || exit 1

          sh ./lane completion > /dev/null
          [ $? -eq 1 ] || exit 1

      - name: Test missing lane
        run: |
          rm -rf lanes
          mkdir lanes
          echo 'echo hi' > lanes/say-hi

          set +e
          sh ./lane say-bye > /dev/null
          [ $? -eq 10 ] || exit 1

      - name: Test configured lane
        run: |
          rm -rf lanes
          mkdir lanes
          echo 'echo hi' > lanes/say-hi

          set +e
          sh ./lane say-hi > result
          [ $? -eq 0 ] || exit 1
          echo 'hi' > expected
          diff -q expected result || { echo "Unexpected difference:"; diff expected result; exit 1; }

      - name: Test builtin lane
        run: |
          rm -rf lanes
          mkdir lane.d/say-hi
          echo 'echo hi' > lane.d/say-hi/run.sh

          set +e
          sh ./lane say-hi > result
          [ $? -eq 0 ] || exit 1
          echo 'hi' > expected
          diff -q expected result || { echo "Unexpected difference:"; diff expected result; exit 1; }

      - name: Test builtin lane over configured lane
        run: |
          rm -rf lanes
          mkdir lanes
          mkdir lane.d/say
          echo 'echo false' > lanes/say
          echo 'echo true' > lane.d/say/run.sh

          set +e
          sh ./lane say > result
          [ $? -eq 0 ] || exit 1
          echo 'true' > expected
          diff -q expected result || { echo "Unexpected difference:"; diff expected result; exit 1; }

      - name: Test listing lanes
        run: |
          rm -rf lanes
          mkdir lanes
          touch lanes/say
          touch lanes/touch

          set +e
          sh ./lane 2> result
          [ $? -eq 1 ] || exit 1
          printf 'The available lanes are:\n  say\n  touch\n' > expected
          diff -q expected result || { echo "Unexpected difference:"; diff expected result; exit 1; }

  lane-d-requirements:
    name: Test lane.d Requirements
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Validate builtins has an entry point
        run: |
          find lane.d -mindepth 1 -maxdepth 1 -type d -exec sh -c 'test -f "$1/run.sh" || echo "$1"' -- {} \; > missing
          count=$(wc -l < missing | sed 's/ //g')
          [ "$count" = 0 ] || { cat missing; exit 1; }

      - name: Validate builtins has options descriptions
        run: |
          find lane.d -mindepth 1 -maxdepth 1 -type d -exec sh -c 'test -f "$1/options.md" || echo "$1"' -- {} \; > missing
          count=$(wc -l < missing | sed 's/ //g')
          [ "$count" = 0 ] || { cat missing; exit 1; }

      - name: Validate builtins has help available
        run: |
          find lane.d -mindepth 1 -maxdepth 1 -type d -exec sh -c 'test -f "$1/help.md" || echo "$1"' -- {} \; > missing
          count=$(wc -l < missing | sed 's/ //g')
          [ "$count" = 0 ] || { cat missing; exit 1; }

  google-api-docs-sheets-download:
    name: Test Google API Docs Sheets Download
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Test missing arguments
        run: |
          set +e
          sh lane.d/google-api-docs-sheets-download/run.sh > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test missing output file
        run: |
          set +e
          sh lane.d/google-api-docs-sheets-download/run.sh -t a-token -i an-id > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test missing document id
        run: |
          set +e
          sh lane.d/google-api-docs-sheets-download/run.sh -t a-token -o result > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test missing token
        run: |
          set +e
          sh lane.d/google-api-docs-sheets-download/run.sh -i an-id -o result > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test google api curl error
        run: |
          export PATH=.github/test-mocks/curl/:$PATH
          export CURL_OVERRIDE=fail

          set +e
          sh lane.d/google-api-docs-sheets-download/run.sh -t a-token -i an-id -o result
          [ $? -eq 22 ] || exit 1

      - name: Test generated output matches expectation
        run: |
          echo 'KEY;UPDATE NEEDED;EN;DA;COMMENT' > expected
          echo 'SOMETHING;;Something;Noget;' >> expected

          export PATH=.github/test-mocks/curl/:$PATH
          export CURL_OVERRIDE=expected

          set +e
          sh lane.d/google-api-docs-sheets-download/run.sh -t a-token -i an-id -o result
          [ $? -eq 0 ] || exit 1
          diff -q expected result > /dev/null || { echo "Unexpected difference:"; diff expected result; exit 1; }

      - name: Test creating output folder
        run: |
          echo '' > expected

          export PATH=.github/test-mocks/curl/:$PATH
          export CURL_OVERRIDE=expected

          set +e
          sh lane.d/google-api-docs-sheets-download/run.sh -t a-token -i an-id -o will/be/created
          [ $? -eq 0 ] || exit 1
          [ -d "./will/be" ] || { echo "Output folder was not created"; exit 1; }

  google-api-jwt-generate:
    name: Test Google API JWT Generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: |
          openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 1 -nodes -subj "/C=US/ST=Void/L=Void/O=Void/CN=www.example.com"
          openssl pkcs12 -export -passout pass:notasecret -out key.p12 -inkey key.pem -in cert.pem
          rm *.pem

      - name: Test missing arguments
        run: |
          set +e
          sh lane.d/google-api-jwt-generate/run.sh > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test missing issuer
        run: |
          set +e
          sh lane.d/google-api-jwt-generate/run.sh -s 'scope-a scope-b' -p key.p12 > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test missing scopes
        run: |
          set +e
          sh lane.d/google-api-jwt-generate/run.sh -i an-issuer -p key.p12 > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test missing p12 file
        run: |
          set +e
          sh lane.d/google-api-jwt-generate/run.sh -i an-issuer -s 'scope-a scope-b' > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test non-existing p12 file
        run: |
          set +e
          sh lane.d/google-api-jwt-generate/run.sh -i an-issuer -s 'scope-a scope-b' -p not-a-key.p12 > /dev/null
          [ $? -eq 4 ] || exit 1

      - name: Test google api curl error
        run: |
          export PATH=.github/test-mocks/curl/:$PATH
          export CURL_OVERRIDE=fail

          set +e
          sh lane.d/google-api-jwt-generate/run.sh -i an-issuer -s 'scope-a scope-b' -p key.p12 > result
          [ $? -eq 22 ] || exit 1

      - name: Test generating token
        run: |
          echo 'a-secret-token' > expected
          echo '{"access_token":"a-secret-token"}' > override

          export PATH=.github/test-mocks/curl/:$PATH
          export CURL_OVERRIDE=override

          set +e
          sh lane.d/google-api-jwt-generate/run.sh -i an-issuer -s 'scope-a scope-b' -p key.p12 > result
          [ $? -eq 0 ] || exit 1
          diff -q expected result > /dev/null || { echo "Unexpected difference:"; diff expected result; exit 1; }

  mobile-static-resources-images:
    name: Test Static Resources Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: |
          mkdir ./empty-folder

      - name: Test missing arguments
        run: |
          set +e
          sh lane.d/mobile-static-resources-images/run.sh > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test missing input file
        run: |
          set +e
          sh lane.d/mobile-static-resources-images/run.sh -o result > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test missing output file
        run: |
          set +e
          sh lane.d/mobile-static-resources-images/run.sh -i input > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test non-existing input folder
        run: |
          set +e
          sh lane.d/mobile-static-resources-images/run.sh -i ./non-existing-folder -o result > /dev/null
          [ $? -eq 3 ] || exit 1

      - name: Test empty asset folder
        run: |
          set +e
          sh lane.d/mobile-static-resources-images/run.sh -i empty-folder -o result
          [ $? -eq 0 ] || exit 1
          diff -q .github/test-resources/mobile-static-resources-images/empty.swift result > /dev/null || { echo "Unexpected difference:"; diff .github/test-resources/mobile-static-resources-images/empty.swift result; exit 1; }

      - name: Test with asset folder
        run: |
          set +e
          sh lane.d/mobile-static-resources-images/run.sh -i .github/test-resources/mobile-static-resources-images/assets -o result
          [ $? -eq 0 ] || exit 1
          diff -q .github/test-resources/mobile-static-resources-images/assets.swift result > /dev/null || { echo "Unexpected difference:"; diff .github/test-resources/mobile-static-resources-images/assets.swift result; exit 1; }

      - name: Test creating output folder
        run: |
          set +e
          sh lane.d/mobile-static-resources-images/run.sh -i empty-folder -o will/be/created
          [ $? -eq 0 ] || exit 1
          [ -d "./will/be" ] || { echo "Output folder was not created"; exit 1; }

  mobile-update-translations:
    name: Test Update Translations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Test missing argument
        run: |
          set +e
          sh lane.d/mobile-update-translations/run.sh > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test missing configuration for missing input
        run: |
          set +e
          sh lane.d/mobile-update-translations/run.sh -t ios -k 1 -m 3 -o result.swift -c "4 result.DA.strings" -c "3 result.EN.strings"
          [ $? -eq 111 ] || exit 1

      - name: Test missing configuration for input not a file
        run: |
          set +e
          sh lane.d/mobile-update-translations/run.sh -t ios -k 1 -m 3 -o result.swift -c "4 result.DA.strings" -c "3 result.EN.strings" -i .github/test-resources/
          [ $? -eq 111 ] || exit 1

      - name: Test missing configuration for missing main language
        run: |
          set +e
          sh lane.d/mobile-update-translations/run.sh -t ios -k 1 -o result.swift -c "4 result.DA.strings" -c "3 result.EN.strings" -i .github/test-resources/mobile-update-translations/configuration/input.csv
          [ $? -eq 111 ] || exit 1

      - name: Test missing configuration for missing key row
        run: |
          set +e
          sh lane.d/mobile-update-translations/run.sh -t ios -m 3 -o result.swift -c "4 result.DA.strings" -c "3 result.EN.strings" -i .github/test-resources/mobile-update-translations/configuration/input.csv
          [ $? -eq 111 ] || exit 1

      - name: Test missing configuration for missing output
        run: |
          set +e
          sh lane.d/mobile-update-translations/run.sh -t ios -k 1 -m 3 -c "4 result.DA.strings" -c "3 result.EN.strings" -i .github/test-resources/mobile-update-translations/configuration/input.csv
          [ $? -eq 111 ] || exit 1

      - name: Test ios output is created as expected
        run: |
          set +e
          sh lane.d/mobile-update-translations/run.sh -t ios -k 1 -m 3 -o result.swift -c "4 result.DA.strings" -c "3 result.EN.strings" -i .github/test-resources/mobile-update-translations/configuration/input.csv
          [ $? -eq 0 ] || exit 1
          diff -q .github/test-resources/mobile-update-translations/expected-ios/result.swift result.swift > /dev/null || { echo "Unexpected difference:"; diff .github/test-resources/mobile-update-translations/expected-ios/result.swift result.swift; exit 1; }
          diff -q .github/test-resources/mobile-update-translations/expected-ios/result.EN.strings result.EN.strings > /dev/null || { echo "Unexpected difference:"; diff .github/test-resources/mobile-update-translations/expected-ios/result.EN.strings result.EN.strings; exit 1; }
          diff -q .github/test-resources/mobile-update-translations/expected-ios/result.DA.strings result.DA.strings > /dev/null || { echo "Unexpected difference:"; diff .github/test-resources/mobile-update-translations/expected-ios/result.DA.strings result.DA.strings; exit 1; }

      - name: Test android output is created as expected
        run: |
          set +e
          sh lane.d/mobile-update-translations/run.sh -t android -k 1 -c "4 result.DA.strings" -c "3 result.EN.strings" -i .github/test-resources/mobile-update-translations/configuration/input.csv
          [ $? -eq 0 ] || exit 1
          diff -q .github/test-resources/mobile-update-translations/expected-android/result.EN.strings result.EN.strings > /dev/null || { echo "Unexpected difference:"; diff .github/test-resources/mobile-update-translations/expected-android/result.EN.strings result.EN.strings; exit 1; }
          diff -q .github/test-resources/mobile-update-translations/expected-android/result.DA.strings result.DA.strings > /dev/null || { echo "Unexpected difference:"; diff .github/test-resources/mobile-update-translations/expected-android/result.DA.strings result.DA.strings; exit 1; }

      - name: Test csv escaping
        run: |
          printf 'key,en\nTHIS,"This is a longer sentence, which includes a comma."\nTHAT,Another string including a | even.' > input
          printf '<resources>\n\t<string name="that">Another string including a | even.</string>\n\t<string name="this">This is a longer sentence, which includes a comma.</string>\n</resources>\n' > expected

          set +e
          sh lane.d/mobile-update-translations/run.sh -t android -k 1 -c "2 result" -i input
          [ $? -eq 0 ] || exit 1
          diff -q result expected > /dev/null || { echo "Unexpected difference:"; diff result expected; exit 1; }

      - name: Test csv escaping on every column
        run: |
          printf '"key","en"\n"THIS","This is a longer sentence, which includes a comma."\n"THAT","Another string including a | even."' > input
          printf '<resources>\n\t<string name="that">Another string including a | even.</string>\n\t<string name="this">This is a longer sentence, which includes a comma.</string>\n</resources>\n' > expected

          set +e
          sh lane.d/mobile-update-translations/run.sh -t android -k 1 -c "2 result" -i input
          [ $? -eq 0 ] || exit 1
          diff -q result expected > /dev/null || { echo "Unexpected difference:"; diff result expected; exit 1; }

  shell-run-github-workflow-tests:
    name: Test Shell Run Github Workflow Tests (always skipped on GitHub)
    runs-on: ubuntu-latest
    if: ${{ false }}
    steps:
      - uses: actions/checkout@v3

      - name: Test non-existing file
        run: |
          set +e
          sh lane.d/shell-run-github-workflow-tests/run.sh -i ./non-existing-file > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test running tests
        run: |
          set +e
          sh lane.d/shell-run-github-workflow-tests/run.sh -i .github/test-resources/shell-run-github-workflow-tests/test.yaml
          [ $? -eq 1 ] || exit 1

      - name: Test running unknown test section (has no tests and thus no errors)
        run: |
          sh lane.d/shell-run-github-workflow-tests/run.sh -i .github/test-resources/shell-run-github-workflow-tests/test.yaml -j unknown-tests

      - name: Test running passing tests
        run: |
          sh lane.d/shell-run-github-workflow-tests/run.sh -i .github/test-resources/shell-run-github-workflow-tests/test.yaml -j passing-tests

      - name: Test running failing tests
        run: |
          set +e
          sh lane.d/shell-run-github-workflow-tests/run.sh -i .github/test-resources/shell-run-github-workflow-tests/test.yaml -j failing-tests
          [ $? -eq 1 ] || exit 1

  shell-github-action-semver-compare:
    name: Test Shell Github Action Semver Compare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Test missing arguments
        run: |
          set +e
          sh lane.d/shell-github-action-semver-compare/run.sh > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test missing main version argument
        run: |
          set +e
          sh lane.d/shell-github-action-semver-compare/run.sh -c "0.0.0" > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test missing current version argument
        run: |
          set +e
          sh lane.d/shell-github-action-semver-compare/run.sh -m "0.0.0" > /dev/null
          [ $? -eq 111 ] || exit 1

      - name: Test matching versions
        run: |
          set +e
          sh lane.d/shell-github-action-semver-compare/run.sh -m "0.0.0" -c "0.0.0" > /dev/null
          [ $? -eq 10 ] || exit 1

      - name: Test descending versions
        run: |
          set +e
          sh lane.d/shell-github-action-semver-compare/run.sh -m "1.2.3" -c "0.0.0" > /dev/null
          [ $? -eq 20 ] || exit 1

      - name: Test ascending versions
        run: |
          set +e
          sh lane.d/shell-github-action-semver-compare/run.sh -m "1.2.3" -c "3.2.1" > /dev/null
          [ $? -eq 0 ] || exit 1

      - name: Test quiet mode
        run: |
          touch expected

          set +e
          sh lane.d/shell-github-action-semver-compare/run.sh -m "1.2.3" -c "3.2.1" > result
          [ $? -eq 0 ] || exit 1
          diff -q expected result > /dev/null && { echo "There should be output without quiet mode"; exit 1; }

          sh lane.d/shell-github-action-semver-compare/run.sh -m "1.2.3" -c "3.2.1" -q > result
          [ $? -eq 0 ] || exit 1
          diff -q expected result > /dev/null || { echo "Unexpected difference:"; diff expected result; exit 1; }

  unit-tests-succeeded:
    name: Tests Succeeded
    needs:
      - lane
      - lane-d-requirements
      - google-api-docs-sheets-download
      - google-api-jwt-generate
      - mobile-static-resources-images
      - mobile-update-translations
      - shell-github-action-semver-compare

    runs-on: ubuntu-latest
    steps:
      - name: All clear
        run: exit 0
