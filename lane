#!/bin/sh
VERSION='unreleased'
# DANGER: LINES ABOVE MUST BE ALIGNED WITH RELEASE BUILD

set -e
OLD_PWD=$(pwd)

trap 'set +x; cd "$OLD_PWD" >/dev/null 2>&1; rm -rf $TMP >/dev/null 2>&1' 0
trap 'exit 2' 1 2 3 15

_DISPLAY_HELP()
{
    echo "$0: <name-of-lane>"
    echo "Where the name of a lane indicates wich lane you wish to execute"
}

_DISPLAY_VERSION()
{
    echo "Version: $VERSION"
}

_DISPLAY_LANES()
{
    echo "The available lanes are:"
    find lanes -type f -maxdepth 1 | sed 's|^lanes/||g;s|^|  |g' | grep -vE '\.ini$'
}

if [ "$1" = "-h" ] || [ "$1" = "--help" ] || [ "$1" = "help" ]; then
    _DISPLAY_HELP
    exit 0
fi

if [ "$1" = "-v" ] || [ "$1" = "--version" ] || [ "$1" = "version" ]; then
    _DISPLAY_VERSION
    exit 0
fi

while [ ! -d lanes ] && [ ! "$(pwd)" = '/' ]; do
    cd ..
done

if [ ! -d lanes ]; then
    echo "Unable to find \`lanes\` working from $OLD_PWD" >&2
    exit 2
fi

if [ -z "$1" ]; then
    _DISPLAY_LANES
    exit 1
fi

LANE_PWD=$(pwd)

if [ -f "${LANE_PWD}/lane.d/$1" ]; then
    if [ -z "$2" ]; then
        INI=$(basename "$0")
        sh "${LANE_PWD}/lane.d/$1" "${LANE_PWD}/lanes/${INI}.ini"
    else
        sh "${LANE_PWD}/lane.d/$1" "${2}"
    fi
elif [ -f "${LANE_PWD}/lanes/$1" ]; then
    sh "${LANE_PWD}/lanes/$1" "${LANE_PWD}/lanes/${1}.ini"
else
    echo "Attempt to run unrecognized lane: '${1}'"
    _DISPLAY_LANES
    exit 10
fi
